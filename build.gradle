plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'checkstyle'
    id 'jacoco'
    id 'org.liquibase.gradle' version '2.0.4'
}

application {
    mainClass = "hexlet.code.AppApplication"
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
    liquibaseRuntime('org.springframework.boot:spring-boot-starter-data-jpa')
    liquibaseRuntime('org.liquibase:liquibase-core')
    liquibaseRuntime('org.liquibase.ext:liquibase-hibernate5:4.18.0')
    liquibaseRuntime 'com.h2database:h2'
    liquibaseRuntime 'org.postgresql:postgresql'
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

diffChangeLog {
    dependsOn compileJava
}

// Настраиваем Liquibase
liquibase {
    activities {
        main {
            // Указываем путь, по которому будет сгенерирован файл миграции
            changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
            // Указывем источник, с которым будут сравниваться изменения
            // Это база данных, изначально она пустая
            url 'jdbc:h2:./blog'
            // Имя пользователя и пароль для подключения к базе
            username 'user'
            password 'password'
            // Сравниваем с моделями, задавая пакет
            referenceUrl 'hibernate:spring:hexlet.code.entity.' +
                    // Указываем диалект
                    '?dialect=org.hibernate.dialect.H2Dialect' +
                    // Указываем правила именования таблиц и столбцов,
                    // чтобы они соответствовали правилам Spring
                    '&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
        }
    }
}